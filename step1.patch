-----8<----- step1.patch START
diff --git a/apps/api/src/dotenv.ts b/apps/api/src/dotenv.ts
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/apps/api/src/dotenv.ts
@@ -0,0 +1,32 @@
+import path from "node:path";
+import { config } from "dotenv";
+import z from "zod";
+
+// Load .env from repo root (works when running from monorepo root)
+config({ path: path.resolve(process.cwd(), ".env") });
+
+// Minimal runtime validation for critical vars (non-fatal in dev)
+const EnvSchema = z.object({
+  DATABASE_URL: z.string().min(1, "DATABASE_URL is required"),
+  JWT_SECRET: z.string().min(1, "JWT_SECRET is required"),
+  STRIPE_SECRET_KEY: z.string().optional(),
+  STRIPE_WEBHOOK_SECRET: z.string().optional(),
+  REDIS_URL: z.string().optional(),
+});
+
+export const env = (() => {
+  const parsed = EnvSchema.safeParse(process.env);
+  if (!parsed.success) {
+    // Show warnings in dev, throw only in production
+    const msgs = parsed.error.issues.map(i => `${i.path.join(".")}: ${i.message}`).join("; ");
+    if (process.env.NODE_ENV === "production") {
+      throw new Error(`Invalid env: ${msgs}`);
+    } else {
+      console.warn("[env] Missing/invalid env (dev allowed):", msgs);
+    }
+  }
+  return process.env as Record<string, string>;
+})();
+
+export default env;
+
diff --git a/apps/api/src/db.ts b/apps/api/src/db.ts
new file mode 100644
index 0000000..2222222
--- /dev/null
+++ b/apps/api/src/db.ts
@@ -0,0 +1,19 @@
+import { PrismaClient } from "@prisma/client";
+
+// Ensure a single Prisma instance (prevents connection exhaustion in dev)
+const globalForPrisma = globalThis as unknown as { prisma?: PrismaClient };
+
+export const prisma =
+  globalForPrisma.prisma ??
+  new PrismaClient({
+    // log: ["query", "error", "warn"], // uncomment for debugging
+  });
+
+if (process.env.NODE_ENV !== "production") {
+  globalForPrisma.prisma = prisma;
+}
+
+export default prisma;
+
diff --git a/.env.example b/.env.example
index 1111111..3333333 100644
--- a/.env.example
+++ b/.env.example
@@ -1,6 +1,16 @@
 # FRONTEND
 NEXT_PUBLIC_API_BASE_URL=http://localhost:4000
+NEXT_PUBLIC_SITE_URL=http://localhost:3000
+NEXT_PUBLIC_ENABLE_PASSKEYS=false
 
 # BACKEND
 DATABASE_URL=postgresql://USER:PASSWORD@localhost:5432/heritage
 JWT_SECRET=replace_me
+REDIS_URL=redis://localhost:6379
+
+# STRIPE (test mode)
+STRIPE_SECRET_KEY=sk_test_xxx
+STRIPE_WEBHOOK_SECRET=whsec_xxx
+
+# OBSERVABILITY
+SENTRY_DSN=
-----8<----- step1.patch END
