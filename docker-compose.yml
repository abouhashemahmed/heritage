version: "3.9"

services:
  reverse-proxy:
    image: traefik:v2.10
    container_name: gateway
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.leresolver.acme.email=admin@ourarabheritage.com"
      - "--certificatesresolvers.leresolver.acme.storage=/acme.json"
      - "--certificatesresolvers.leresolver.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/acme.json:/acme.json"
    networks:
      - frontend-network
      - backend-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: ourheritage-backend
    restart: unless-stopped
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    user: "node"
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.ourarabheritage.com`)"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=leresolver"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: ourheritage-frontend
    restart: unless-stopped
    env_file:
      - .env.production
    networks:
      - frontend-network
    depends_on:
      backend:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`ourarabheritage.com`)"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=leresolver"

  postgres:
    image: postgres:15-alpine
    container_name: ourheritage-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - backend-network

  redis:
    image: redis:7-alpine
    container_name: ourheritage-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - backend-network

networks:
  backend-network:
    internal: true
  frontend-network:
    internal: false

volumes:
  pg_data:
  redis_data:
  backups:
